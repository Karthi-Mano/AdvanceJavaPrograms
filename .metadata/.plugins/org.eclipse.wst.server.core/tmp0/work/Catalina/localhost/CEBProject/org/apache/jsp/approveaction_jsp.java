/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.47
 * Generated at: 2018-05-13 11:33:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.Connection;

public final class approveaction_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.DriverManager");
    _jspx_imports_classes.add("java.sql.Statement");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>SkillMapApplication</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h4>ApprovalActionPage</h4>\r\n");
      out.write("<hr/>\r\n");
      out.write("<center>\r\n");


String email=request.getParameter("email");

String query="select A.EMPNAME,A.QUALIFICATION,A.NOOFBATCH,A.STUDENTSHANDLE,A.CURRENTROLE,A.ROLEREQUEST,A.STUDENTSPLACED,A.STATUS,A.EMAIL,B.CERTIFIED,B.SKILLS FROM SKILLMASTER A INNER JOIN  SKILLSET B ON A.EMAIL=B.EMAIL where A.EMAIL='"+email+"'";

//register driverclass
  Class.forName("org.h2.Driver");
  //create a connection
  Connection connection=DriverManager.getConnection("jdbc:h2:tcp://localhost/~/CEBProject","sa","");
  //create a statement
  Statement statement=connection.createStatement();
   //execute a query
  ResultSet rs=statement.executeQuery(query);
  
   while(rs.next()){
      out.write("\r\n");
      out.write("<form action=\"approvestatus.jsp\" method=\"get\">\r\n");
      out.write("<table border=\"1\">\r\n");
      out.write("<th>EmployeeName</th>\r\n");
      out.write("<th>Qualification</th>\r\n");
      out.write("<th>NoofBatchs</th>\r\n");
      out.write("<th>StudentsHandle</th>\r\n");
      out.write("<th>CurrentRole</th>\r\n");
      out.write("<th>RoleRequest</th>\r\n");
      out.write("<th>StudentsPlaced</th>\r\n");
      out.write("<th>Status</th>\r\n");
      out.write("<th>Certified</th>\r\n");
      out.write("<th>Skills</th>\r\n");
      out.write("<th>Action</th>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>");
      out.print(rs.getString(1));
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(rs.getString(2));
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(rs.getString(3));
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(rs.getString(4));
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(rs.getString(5));
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(rs.getString(6));
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(rs.getString(7));
      out.write("</td>\r\n");
      out.write("\r\n");
      out.write("<td>");
      out.print(rs.getString(8));
      out.write("</td>\r\n");
      out.write("\r\n");
      out.write("<td>");
      out.print(rs.getString(10));
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(rs.getString(11));
      out.write("</td>\r\n");
      out.write("<td>\r\n");
      out.write("<select name=\"status\">\r\n");
      out.write("<option value=\"waiting\">TillWaiting</option>\r\n");
      out.write("<option value=\"Approved\">Approved</option>\r\n");
      out.write("<option value=\"NotApproved\">NotApproved</option>\r\n");
      out.write("</select>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("<center><input type=\"submit\" value=\"UPDATEDATA\"/></center>\r\n");
      out.write("</form>\r\n");
}
      out.write('\r');
      out.write('\n');


HttpSession sessions=request.getSession();
sessions.setAttribute("email", email);


      out.write("\r\n");
      out.write("</center>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
